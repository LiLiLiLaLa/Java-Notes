1.深入理解AQS
1.1.独占锁
独占锁获取――>acquire(int arg)
1.1.1.tryAcquire再次使用CAS尝试获取同步状态，若成功方法直接返回，当前线程置为持有锁线程，若再次尝试失败，调用addWaiter()

1.1.2.addWaiter()源码

1.1.3.enq()

1.1.4.acquireQueued()

节点从同步队列获取同步状态的前提条件：只有当前驱节点为头结点时，线程才有机会获取同步状态
if(p == head && tryAcquire(arg))

1.1.5.shouldParkAfterFailedAcquire()尝试将前驱节点状态改为Node.SIGNAL，表示此时当前节点应该被阻塞

独占锁的释放――>release()

unparkSuccessor():唤醒头结点的下一个结点（唤醒距离头结点最近的一个非空结点――>保证公平性），如果它存在的话，此时头结点是当前已经获取到锁的结点
 